<library>

  <function name="PlayAudio" parameters="src">
    thissrc = GetSrc(src)
    AddAudio (thissrc)
  </function>
  <function name="PlayAudioID" parameters="src, id">
    thissrc = GetSrc(src)
    AddAudioID (thissrc, id)
  </function>
  <function name="PlayAudioLooped" parameters="src">
    thissrc = GetSrc(src)
    if (not HasAttribute(game,"audiofilesplayed")) {
      game.audiofilesplayed = 0
    }
    AddAudioID (thissrc, "audio-" + game.audiofilesplayed)
	JS.eval("document.getElementById('audio-" + game.audiofilesplayed+"').loop=true;")
    game.audiofilesplayed = game.audiofilesplayed + 1
  </function>
  <function name="PlayAudioLoopedID" parameters="src, id">
    thissrc = GetSrc(src)
    AddAudioID (thissrc, id)
	JS.eval("document.getElementById('"+id+"').loop=true;")
  </function>
  <function name="PlayAudioSynced" parameters="src">
    thissrc = GetSrc(src)
    if (not HasAttribute(game,"audiofilesplayed")) {
      game.audiofilesplayed = 0
    }
    AddAudioID (thissrc, "audio-" + game.audiofilesplayed)
    DoAudioSync
    js = "$('#audio-"+game.audiofilesplayed+"').on('ended', function()"
	js = js + "{ASLEvent('EndAudioSync','bs');"
	js = js + "$(this).remove();});"
    JS.eval (js)
    game.audiofilesplayed = game.audiofilesplayed + 1
  </function>
  <function name="PlayAudioSyncedID" parameters="src, id">
    thissrc = GetSrc(src)
    if (not HasAttribute(game,"audiofilesplayed")) {
      game.audiofilesplayed = 0
    }
    AddAudioID (thissrc, id)
    DoAudioSync
    js = "$('#audio-"+game.audiofilesplayed+"').on('ended', function() "
    js = js + "{ASLEvent('EndAudioSync','');$(this).remove();});"
    JS.eval (js)
    game.audiofilesplayed = game.audiofilesplayed + 1
  </function>
  <function name="PlayAudioSyncedWithCallback" parameters="src, callback">
    thissrc = GetSrc(src)
    if (not HasAttribute(game,"audiofilesplayed")) {
      game.audiofilesplayed = 0
    }
    AddAudioID (thissrc, "audio-" + game.audiofilesplayed)
    DoAudioSync
    js = "$('#audio-"+game.audiofilesplayed+"').on('ended', function() "
    js = js + "{ASLEvent('EndAudioSyncAndInvoke',$(this).attr('id'));$(this).remove();});"
    JS.eval (js)
    if (not HasAttribute(game, "audiofinishedcallback")){
	  game.audiofinishedcallback = NewScriptDictionary()
	}
    dictionary add(game.audiofinishedcallback,id,callback)
    game.audiofilesplayed = game.audiofilesplayed + 1
  </function>
  <function name="PlayAudioSyncedIDWithCallback" parameters="src, id, callback">
    thissrc = GetSrc(src)
	id = Replace(id," ","_")
    AddAudioID (thissrc, id)
    game.preventturnscripts = true
    DoAudioSync
    js = "$('#"+id+"').on('ended', function() "
    js = js + "{ASLEvent('EndAudioSyncAndInvoke',$(this).attr('id'));$(this).remove();});"
    JS.eval (js)
	if (not HasAttribute(game, "audiofinishedcallback")){
	  game.audiofinishedcallback = NewScriptDictionary()
	}
    dictionary add(game.audiofinishedcallback,id,callback)
  </function>
  <function name="DestroyAllAudio">
    stop sound
    JS.eval ("$('audio').remove();")
    EndAudioSync("")
	game.audiofinishedcallback = NewScriptDictionary()
  </function>
  <function name="DestroyAudio" parameters="id">
    JS.eval ("$('#"+id+"').remove();")
  </function>
  <function name="PauseAudio" parameters="id">
    js = "var thisAud = document.getElementById('"+id+"');"
	js = js + "$('#"+id+"').attr('wasat',Math.round(1000*thisAud.currentTime)/1000);"
	js = js + "thisAud.pause();"
	JS.eval(js)
  </function>
  <function name="ResumePausedAudio" parameters="id">
    js = "var thisAud = document.getElementById('"+id+"');"
	js = js + "thisAud.play();thisAud.currentTime=$('#"+id+"').attr('wasat');"
	JS.eval (js)
  </function>
  <function name="RestartPausedAudio" parameters="id">
    JS.eval ("var thisAud = document.getElementById('"+id+"');thisAud.load();")
  </function>
  <function name="SetAudioVolume" parameters="id,vol">
    // vol must be between 0 and 1 
    JS.eval("document.getElementById('"+id+"').volume="+vol+";")
  </function>
  <function name="MuteAudio" parameters="id">
    JS.eval("document.getElementById('"+id+"').volBak = document.getElementById('"+id+"').volume;")
	SetAudioVolume(id,0)
  </function>
  <function name="UnmuteAudio" parameters="id">
    JS.eval("document.getElementById('"+id+"').volume = document.getElementById('"+id+"').volBak;")
  </function>
  <function name="MuteAllAudio">
    js = "$('audio').each(function(){$(this).attr('volbak',this.volume);});var audios = document.getElementsByTagName('audio');for(aud in audios){if (typeof(audios[aud].volume)!='undefined'){audios[aud].volume=0;}}"
	JS.eval (js)
  </function>
  <function name="UnmuteAllAudio">
    js = "$('audio').each(function(){if ($(this).prop('volume')!=null)"
	js = js + "{$(this).prop('volume',$(this).attr('volbak'));}});"
	JS.eval (js)
  </function>
  <function name="PauseAllAudio">
    js = "var audios = document.getElementsByTagName('audio');"
	js = js + "for(aud in audios){audios[aud].pause();}"
	JS.eval (js)
  </function>
  <function name="RestartAllPausedAudio">
    js = "var audios = document.getElementsByTagName('audio');"
	js = js + "for(aud in audios){audios[aud].audios[aud].play();}"
	JS.eval(js)
  </function>
  <function name="SetAllAudioVolume" parameters="vol">
    // vol must be between 0 and 1 
    js = "var audios = document.getElementsByTagName('audio');"
	js = js + "for(aud in audios){audios[aud].volume = "+vol+";}"
	JS.eval(js)
  </function>
  <function name="SetAudioCurrentTime" parameters="id,pos">
    JS.eval("document.getElementById('"+id+"').currentTime="+pos+";")
  </function>
  <function name="IncreaseVolume" parameters="id"><![CDATA[
    // vol must be between 0 and 1 
    js = "var thisAud = document.getElementById('"+id+"');"
	js = js + "if(!thisAud){addTextAndScroll(String.fromCharCode(60)+"
	js = js + "'br/'+String.fromCharCode(62)+'There is no sound playing.');}"
	js = js + "else if(thisAud.volume*10<10){thisAud.volume = (thisAud.volume*10+1)/10;"
	js = js + "addTextAndScroll(String.fromCharCode(60)+'br/'+String.fromCharCode(62)+"
	js = js + "'The volume has been increased.');}"
	js = js + "else{addTextAndScroll(String.fromCharCode(60)+'br/'+String.fromCharCode(62)+"
	js = js + "'The volume is already at the maximum level.');}"
	JS.eval(js)
  ]]></function>
  <function name="DecreaseVolume" parameters="id"><![CDATA[
    // vol must be between 0 and 1 
    js = "var thisAud = document.getElementById('"+id+"');"
	js = js + "if(!thisAud){addTextAndScroll(String.fromCharCode(60)+"
	js = js + "'br/'+String.fromCharCode(62)+'There is no sound playing.');}"
	js = js + "else if(thisAud.volume*10>0){thisAud.volume = (thisAud.volume*10-1)/10;"
	js = js + "addTextAndScroll(String.fromCharCode(60)+'br/'+String.fromCharCode(62)+"
	js = js + "'The volume has been decreased.');}"
	js = js + "else{addTextAndScroll(String.fromCharCode(60)+"
	js = js + "'br/'+String.fromCharCode(62)+'The volume is already all the way down.');}"
	JS.eval(js)
  ]]></function>
  <function name="IncreaseAllVolume" parameters="id">
  
  </function>
  <function name="DecreaseAllVolume" parameters="id">
  
  </function>
  <function name="DestroyAudioAndRunScript" parameters="id">
    JS.eval ("$('#"+id+"').remove();")
    EndAudioSyncAndInvoke(id)
  </function>
  <function name="DoAudioSync">
    firsttime {
      JS.eval ("var sendCommandBak = sendCommand;")
    }
    game.audiosyncing = true
    JS.eval ("sendCommand = function(){$('input#txtCommand').val();};")
  </function>
  <function name="EndAudioSync" parameters="bs">
    game.preventturnscripts = true
    game.audiosyncing = false
    js = "if (typeof(sendCommandBak) === 'function')"
    js = js + "{sendCommand = sendCommandBak;}"
    JS.eval (js)
  </function>
  <function name="EndAudioSyncAndInvoke" parameters="id">
    game.preventturnscripts = true
	game.audiosyncing = false
    js = "if (typeof(sendCommandBak) === 'function')"
    js = js + "{sendCommand = sendCommandBak;}"
    JS.eval (js)
    if (HasAttribute(game, "audiofinishedcallback")) {
      if (DictionaryContains(game.audiofinishedcallback,id)) {
        invoke (ScriptDictionaryItem(game.audiofinishedcallback,id))
		dictionary remove(game.audiofinishedcallback,id)
		if (DictionaryCount(game.audiofinishedcallback)>0){
		  DoAudioSync
		}
      }
    }
  </function>
  <function name="GetSrc" parameters="src" type="string">
    src = Split(src,";")
    online = false
    pres = Split("http;ftp",";")
    tags = NewStringList()
    foreach (url, src) {
      foreach (pre, pres) {
        if (StartsWith(url,pre)) {
          online = true
        }
      }
      arr = Split(url,".")
      type = arr[ListCount(arr)-1]
      if (online) {
        thisurl = url
      }
      else {
        thisurl = (GetFileURL(url))
      }
      list add (tags, Chr(60)+"source src=\""+thisurl+"\" type=\"audio/"+type+"\" "+Chr(62))
    }
    srctags = Join(tags,"")
    return (srctags)
  </function>
  <function name="MobileCheck">
    JS.eval ("function isMobilePlayer(){if (typeof(currentTab) === 'string'){return true;}return false;};")
  </function>
  <function name="AddAudio" parameters="thissrc">
    MobileCheck
    s = Chr(60)+"audio "
    s = s + " autoplay" + Chr(62) + thissrc + Chr(60)+"/audio"+Chr(62)
    js = "var thisTag = '"+s+"';if(isMobilePlayer()){"
      js = js + "thisTag = thisTag.replace(/"+Chr(60)+"audio/,'"+Chr(60)+"audio"
      js = js + " controls controlsList=\"nodownload\" class=\"mob-aud\" ');"
      js = js + "addText('"+Chr(60)+"p"+Chr(62)+"'+thisTag+'"+Chr(60)+"br/"+Chr(62)+"');"
      js = js + "if(typeof($('.mob-aud').last().on('ended'))==='function'){"
        js = js + "onEndBak = $('.mob-aud').last().on('ended');}else{onEndBak=function(){};}"
      js = js + "$('.mob-aud').last().insertAfter($('#txtCommandDiv')).on('ended',function(){"
        js = js + "onEndBak();$(this).remove();}).css('margin-top','4px');}else{$('body').after(thisTag);}"
    JS.eval (js)
  </function>
  <function name="AddAudioID" parameters="thissrc, id">
    MobileCheck
    s = Chr(60)+"audio id=\""+id+"\" "
    s = s + " autoplay" + Chr(62) + thissrc + Chr(60)+"/audio"+Chr(62)
    js = "var thisTag = '"+s+"';if(isMobilePlayer()){"
      js = js + "thisTag = thisTag.replace(/"+Chr(60)+"audio/,'"+Chr(60)+"audio"
      js = js + " controls controlsList=\"nodownload\" class=\"mob-aud\" ');"
      js = js + "addText('"+Chr(60)+"p"+Chr(62)+"'+thisTag+'"+Chr(60)+"br/"+Chr(62)+"');"
      js = js + "if(typeof($('.mob-aud').last().on('ended'))==='function'){"
        js = js + "onEndBak = $('.mob-aud').last().on('ended');}else{onEndBak=function(){};}"
      js = js + "$('.mob-aud').last().insertAfter($('#txtCommandDiv')).on('ended',function(){"
        js = js + "onEndBak();$(this).remove();}).css('margin-top','4px');}else{$('body').after(thisTag);}"
    JS.eval (js)
  </function>
  <function name="FinishTurn">
    if (not HasAttribute(game, "noclear")){
	  if (GetBoolean(game,"preventturnscripts")) {
        game.preventturnscripts = false
      }
      else {
        RunTurnScripts
      }
      UpdateStatusAttributes
      CheckDarkness
      UpdateObjectLinks
	}
  </function>
  <function name="AudioLog" parameters="text">
    game.preventturnscripts = true
    Log (text)
  </function>
  <function name="TestAudio" parameters="src">
    s = Chr(60)+"audio src='"+GetSrc(src)+"' '"
    s = s + " onloadstart='ASLEvent(\"AudioLog\",\"Loading \"+$(this).attr(\"src\"));$(this).remove();'"
    s = s + " onerror='ASLEvent(\"AudioLog\",$(this).attr(\"src\")+\" failed to load.\");$(this).remove();'"
    s = s + "/"+Chr(62)
    JS.addText (s)
  </function>
  
</library>